# CodeQL workflow
name: CodeQL

on:
  schedule:
    - cron: '0 6 * * 6' # Every saturday at 06:00
  workflow_dispatch:

jobs:
  analyze-cpp:
    name: Analyze C++ Code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: cpp, go

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: /home/runner/work/spice/llvm
          key: llvm-13-0-0

      - name: Setup LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          cd ..
          git clone --depth 1 --branch llvmorg-13.0.0 https://github.com/llvm/llvm-project llvm
          mkdir ./llvm/build
          cd ./llvm/build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS_RELEASE="-O2" -G "Unix Makefiles" ../llvm
          cmake --build .

      - name: Prepare environment
        run: |
          shopt -s extglob
          rm -rf !("compiler")
          cp -fR ./compiler/* .
          rm -rf ./compiler

      - name: Download Libs
        run: |
          mkdir ./lib
          cd ./lib
          git clone https://github.com/antlr/antlr4.git

      #- name: Build project
      #  uses: nicledomaS/cmake_build_action@v1.4
      #  env:
      #    LLVM_DIR: /home/runner/work/spice/llvm/build/lib/cmake/llvm
      #  with:
      #    submodule_update: ON
      #    run_tests: ON
      #    cmake_args: -DWITH_TESTS=ON
      #    unit_test_build: -Dtest=ON

      - name: Run Test target
        env:
          SPICE_STD_DIR: /home/runner/work/spice/spice/std
        run: |
          cd ./bin/test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1