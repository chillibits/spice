# C++ CI
name: C++ CI

on:
  push:
  pull_request:
    branches:
      - main
      - dev
      - feature/**

jobs:
  build-linux:
    name: C++ CI
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Setup latest GCC and build dependencies
        run: |
          sudo apt install gcc-12 g++-12
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 110 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12 --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-12 --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-12

      - name: Setup Ninja
        run: sudo apt-get install ninja-build

      - name: Setup Mold
        uses: rui314/setup-mold@v1

      - name: Setup CCache
        uses: hendrikmuhs/ccache-action@v1

      - name: Setup Gcovr
        run: sudo pip install gcovr

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: /home/runner/work/spice/llvm
          key: llvm-15.0.3

      - name: Setup LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          cd ..
          rm -rf llvm
          git clone --depth 1 --branch llvmorg-15.0.3 https://github.com/llvm/llvm-project llvm
          mkdir ./llvm/build
          cd ./llvm/build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS_RELEASE="-O2" -GNinja ../llvm
          cmake --build . -j$(nproc)

      - name: Download Libs
        run: |
          chmod +x setup-libs.sh
          ./setup-libs.sh

      - name: Build Test target
        env:
          LLVM_DIR: /home/runner/work/spice/llvm/build/lib/cmake/llvm
        run: |
          echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
          mkdir ./bin
          cd ./bin
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DSPICE_IS_GH_ACTIONS=ON -DSPICE_BUILT_BY="ghactions" -DSPICE_LINK_STATIC=OFF -DSPICE_DEV_COMPILE=ON -DSPICE_RUN_COVERAGE=ON -GNinja -Wattributes ..
          cmake --build . --target spicetest -j$(nproc)

      - name: Run Test target
        env:
          SPICE_STD_DIR: /home/runner/work/spice/spice/std
        run: |
          cd ./bin/test
          ./spicetest false

      - name: Generate coverage report
        run: |
          cd ./bin
          sudo chmod +x coverage.sh
          sudo ./coverage.sh

      - name: Upload coverage report - coverage.spicelang.com
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          localDir: ./bin/coverage
          remoteDir: chillibits.com/spice/coverage

      - name: Upload coverage report - Codecov
        working-directory: ./bin
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }}